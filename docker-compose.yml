version: "3.8"

services:
  traefik:
      image: traefik:v2.6
      restart: always
      command:
        # Experimentell, um das Dashboard ohne Zugriffsschutz aufzurufen
        #- "--api.insecure=true"
        - "--providers.docker"
        - "--providers.docker.exposedByDefault=false"
        - "--providers.docker.network=traefik_web"
        - "--entrypoints.http.address=:80"
        - "--entrypoints.http.http.redirections.entrypoint.to=https"
        - "--entrypoints.http.http.redirections.entrypoint.scheme=https"
        - "--entrypoints.https.address=:443"
        # Vermeidet, dass wir den resolver in jedem container mit "traefik.http.routers.https.tls.certresolver=le" angeben muessen
        - "--entrypoints.https.http.tls.certResolver=le"
        - "--certificatesresolvers.le.acme.tlschallenge=true"
        - "--certificatesresolvers.le.acme.email=marc.mezger@adesso.de"
        - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
      ports:
        - "80:80"
        - "443:443"
        - "8080:8080"
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock:ro
        - ./letsencrypt:/letsencrypt
      networks:
        - web
  handwriting:
    build: .
    # image: handwriting
    ports:
      - "8001:8001"
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`http://magma.westeurope.cloudapp.azure.com/`)"
    networks:
      - traefik_web




networks:
  web:
    name: traefik_web








  # nginx:
  #   image: nginx:1.23.3-alpine
  #   restart: unless-stopped
  #   volumes:
  #     - ./data/nginx:/etc/nginx/conf.d
  #     - ./data/certbot/conf:/etc/letsencrypt
  #     - ./data/certbot/www:/var/www/certbot
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  # certbot:
  #   image: certbot/certbot
  #   restart: unless-stopped
  #   volumes:
  #     - ./data/certbot/conf:/etc/letsencrypt
  #     - ./data/certbot/www:/var/www/certbot
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
